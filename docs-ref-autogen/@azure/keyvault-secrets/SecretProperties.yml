### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-secrets.SecretProperties'
    name: SecretProperties
    fullName: SecretProperties
    children:
      - '@azure/keyvault-secrets.SecretProperties.contentType'
      - '@azure/keyvault-secrets.SecretProperties.createdOn'
      - '@azure/keyvault-secrets.SecretProperties.enabled'
      - '@azure/keyvault-secrets.SecretProperties.expiresOn'
      - '@azure/keyvault-secrets.SecretProperties.id'
      - '@azure/keyvault-secrets.SecretProperties.keyId'
      - '@azure/keyvault-secrets.SecretProperties.managed'
      - '@azure/keyvault-secrets.SecretProperties.name'
      - '@azure/keyvault-secrets.SecretProperties.notBefore'
      - '@azure/keyvault-secrets.SecretProperties.recoverableDays'
      - '@azure/keyvault-secrets.SecretProperties.recoveryLevel'
      - '@azure/keyvault-secrets.SecretProperties.tags'
      - '@azure/keyvault-secrets.SecretProperties.updatedOn'
      - '@azure/keyvault-secrets.SecretProperties.vaultUrl'
      - '@azure/keyvault-secrets.SecretProperties.version'
    langs:
      - typeScript
    type: interface
    summary: 'An interface representing the properties of a <xref:KeyVaultSecret>.'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretProperties.contentType'
    name: contentType
    fullName: contentType
    children: []
    langs:
      - typeScript
    type: property
    summary: The content type of the secret.
    optional: true
    syntax:
      content: 'contentType?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretProperties.createdOn'
    name: createdOn
    fullName: createdOn
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Creation time in UTC.
      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'createdOn?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretProperties.enabled'
    name: enabled
    fullName: enabled
    children: []
    langs:
      - typeScript
    type: property
    summary: Determines whether the object is enabled.
    optional: true
    syntax:
      content: 'enabled?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretProperties.expiresOn'
    name: expiresOn
    fullName: expiresOn
    children: []
    langs:
      - typeScript
    type: property
    summary: Expiry date in UTC.
    optional: true
    syntax:
      content: 'expiresOn?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretProperties.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: The secret id.
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretProperties.keyId'
    name: keyId
    fullName: keyId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If this is a secret backing a KV certificate, then
      this field specifies the corresponding key backing the KV certificate.
      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'keyId?: URL'
      return:
        type:
          - URL
        description: ''
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretProperties.managed'
    name: managed
    fullName: managed
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      True if the secret's lifetime is managed by
      key vault. If this is a secret backing a certificate, then managed will be
      true.
      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'managed?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretProperties.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: The name of the secret.
    syntax:
      content: 'name: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretProperties.notBefore'
    name: notBefore
    fullName: notBefore
    children: []
    langs:
      - typeScript
    type: property
    summary: Not before date in UTC.
    optional: true
    syntax:
      content: 'notBefore?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretProperties.recoverableDays'
    name: recoverableDays
    fullName: recoverableDays
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The retention dates of the softDelete data.

      The value should be >=7 and <=90 when softDelete enabled.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'recoverableDays?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretProperties.recoveryLevel'
    name: recoveryLevel
    fullName: recoveryLevel
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Reflects the deletion
      recovery level currently in effect for keys in the current vault. If it
      contains 'Purgeable' the key can be permanently deleted by a privileged
      user; otherwise, only the system can purge the key, at the end of the
      retention interval. Possible values include: 'Purgeable',
      'Recoverable+Purgeable', 'Recoverable',
      'Recoverable+ProtectedSubscription'
      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'recoveryLevel?: DeletionRecoveryLevel'
      return:
        type:
          - '@azure/keyvault-secrets.DeletionRecoveryLevel'
        description: ''
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretProperties.tags'
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Application specific
      metadata in the form of key-value pairs.
    optional: true
    syntax:
      content: 'tags?: [key: string]: string'
      return:
        type:
          - '[key: string]: string'
        description: ''
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretProperties.updatedOn'
    name: updatedOn
    fullName: updatedOn
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Last updated time in UTC.
      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'updatedOn?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretProperties.vaultUrl'
    name: vaultUrl
    fullName: vaultUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: The base URL to the vault.
    syntax:
      content: 'vaultUrl: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretProperties.version'
    name: version
    fullName: version
    children: []
    langs:
      - typeScript
    type: property
    summary: The version of the secret. May be undefined.
    optional: true
    syntax:
      content: 'version?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/keyvault-secrets'
references:
  - uid: '@azure/keyvault-secrets.DeletionRecoveryLevel'
    name: DeletionRecoveryLevel
    spec.typeScript:
      - name: DeletionRecoveryLevel
        fullName: DeletionRecoveryLevel
        uid: '@azure/keyvault-secrets.DeletionRecoveryLevel'
