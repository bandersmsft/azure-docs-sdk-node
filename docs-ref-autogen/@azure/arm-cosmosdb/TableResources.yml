### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-cosmosdb.TableResources'
    name: TableResources
    fullName: TableResources
    children:
      - '@azure/arm-cosmosdb.TableResources.beginCreateUpdateTable'
      - '@azure/arm-cosmosdb.TableResources.beginDeleteTable'
      - '@azure/arm-cosmosdb.TableResources.beginMigrateTableToAutoscale'
      - '@azure/arm-cosmosdb.TableResources.beginMigrateTableToManualThroughput'
      - '@azure/arm-cosmosdb.TableResources.beginUpdateTableThroughput'
      - '@azure/arm-cosmosdb.TableResources.createUpdateTable'
      - '@azure/arm-cosmosdb.TableResources.deleteTable'
      - '@azure/arm-cosmosdb.TableResources.getTable'
      - '@azure/arm-cosmosdb.TableResources.getTable_2'
      - '@azure/arm-cosmosdb.TableResources.getTable_1'
      - '@azure/arm-cosmosdb.TableResources.getTableThroughput'
      - '@azure/arm-cosmosdb.TableResources.getTableThroughput_2'
      - '@azure/arm-cosmosdb.TableResources.getTableThroughput_1'
      - '@azure/arm-cosmosdb.TableResources.listTables'
      - '@azure/arm-cosmosdb.TableResources.listTables_2'
      - '@azure/arm-cosmosdb.TableResources.listTables_1'
      - '@azure/arm-cosmosdb.TableResources.migrateTableToAutoscale'
      - '@azure/arm-cosmosdb.TableResources.migrateTableToManualThroughput'
      - '@azure/arm-cosmosdb.TableResources.constructor'
      - '@azure/arm-cosmosdb.TableResources.updateTableThroughput'
    langs:
      - typeScript
    type: class
    summary: Class representing a TableResources.
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.beginCreateUpdateTable'
    name: >-
      beginCreateUpdateTable(string, string, string,
      TableCreateUpdateParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update an Azure Cosmos DB Table
    syntax:
      content: >-
        function beginCreateUpdateTable(resourceGroupName: string, accountName:
        string, tableName: string, createUpdateTableParameters:
        TableCreateUpdateParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: createUpdateTableParameters
          type:
            - '@azure/arm-cosmosdb.TableCreateUpdateParameters'
          description: The parameters to provide for the current Table.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.beginDeleteTable'
    name: 'beginDeleteTable(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing Azure Cosmos DB Table.
    syntax:
      content: >-
        function beginDeleteTable(resourceGroupName: string, accountName:
        string, tableName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.beginMigrateTableToAutoscale'
    name: >-
      beginMigrateTableToAutoscale(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Migrate an Azure Cosmos DB Table from manual throughput to autoscale
    syntax:
      content: >-
        function beginMigrateTableToAutoscale(resourceGroupName: string,
        accountName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.beginMigrateTableToManualThroughput'
    name: >-
      beginMigrateTableToManualThroughput(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Migrate an Azure Cosmos DB Table from autoscale to manual throughput
    syntax:
      content: >-
        function beginMigrateTableToManualThroughput(resourceGroupName: string,
        accountName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.beginUpdateTableThroughput'
    name: >-
      beginUpdateTableThroughput(string, string, string,
      ThroughputSettingsUpdateParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update RUs per second of an Azure Cosmos DB Table
    syntax:
      content: >-
        function beginUpdateTableThroughput(resourceGroupName: string,
        accountName: string, tableName: string, updateThroughputParameters:
        ThroughputSettingsUpdateParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters'
          description: |-
            The parameters to provide for the RUs per second of the
            current Table.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.createUpdateTable'
    name: >-
      createUpdateTable(string, string, string, TableCreateUpdateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update an Azure Cosmos DB Table
    syntax:
      content: >-
        function createUpdateTable(resourceGroupName: string, accountName:
        string, tableName: string, createUpdateTableParameters:
        TableCreateUpdateParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: createUpdateTableParameters
          type:
            - '@azure/arm-cosmosdb.TableCreateUpdateParameters'
          description: The parameters to provide for the current Table.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TableResourcesCreateUpdateTableResponse>
        description: Promise<Models.TableResourcesCreateUpdateTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.deleteTable'
    name: 'deleteTable(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing Azure Cosmos DB Table.
    syntax:
      content: >-
        function deleteTable(resourceGroupName: string, accountName: string,
        tableName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.getTable'
    name: 'getTable(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Tables under an existing Azure Cosmos DB database account with
      the provided name.
    syntax:
      content: >-
        function getTable(resourceGroupName: string, accountName: string,
        tableName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TableResourcesGetTableResponse>
        description: Promise<Models.TableResourcesGetTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.getTable_2'
    name: >-
      getTable(string, string, string, RequestOptionsBase,
      ServiceCallback<TableGetResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTable(resourceGroupName: string, accountName: string,
        tableName: string, options: RequestOptionsBase, callback:
        ServiceCallback<TableGetResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.TableGetResults>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.getTable_1'
    name: 'getTable(string, string, string, ServiceCallback<TableGetResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTable(resourceGroupName: string, accountName: string,
        tableName: string, callback: ServiceCallback<TableGetResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.TableGetResults>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.getTableThroughput'
    name: 'getTableThroughput(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the RUs per second of the Table under an existing Azure Cosmos DB
      database account with the

      provided name.
    syntax:
      content: >-
        function getTableThroughput(resourceGroupName: string, accountName:
        string, tableName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TableResourcesGetTableThroughputResponse>
        description: Promise<Models.TableResourcesGetTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.getTableThroughput_2'
    name: >-
      getTableThroughput(string, string, string, RequestOptionsBase,
      ServiceCallback<ThroughputSettingsGetResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTableThroughput(resourceGroupName: string, accountName:
        string, tableName: string, options: RequestOptionsBase, callback:
        ServiceCallback<ThroughputSettingsGetResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.ThroughputSettingsGetResults>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.getTableThroughput_1'
    name: >-
      getTableThroughput(string, string, string,
      ServiceCallback<ThroughputSettingsGetResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTableThroughput(resourceGroupName: string, accountName:
        string, tableName: string, callback:
        ServiceCallback<ThroughputSettingsGetResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.ThroughputSettingsGetResults>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.listTables'
    name: 'listTables(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists the Tables under an existing Azure Cosmos DB database account.
    syntax:
      content: >-
        function listTables(resourceGroupName: string, accountName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TableResourcesListTablesResponse>
        description: Promise<Models.TableResourcesListTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.listTables_2'
    name: >-
      listTables(string, string, RequestOptionsBase,
      ServiceCallback<TableListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTables(resourceGroupName: string, accountName: string,
        options: RequestOptionsBase, callback: ServiceCallback<TableListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.TableListResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.listTables_1'
    name: 'listTables(string, string, ServiceCallback<TableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listTables(resourceGroupName: string, accountName: string,
        callback: ServiceCallback<TableListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.TableListResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.migrateTableToAutoscale'
    name: 'migrateTableToAutoscale(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Migrate an Azure Cosmos DB Table from manual throughput to autoscale
    syntax:
      content: >-
        function migrateTableToAutoscale(resourceGroupName: string, accountName:
        string, tableName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TableResourcesMigrateTableToAutoscaleResponse>
        description: Promise<Models.TableResourcesMigrateTableToAutoscaleResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.migrateTableToManualThroughput'
    name: >-
      migrateTableToManualThroughput(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Migrate an Azure Cosmos DB Table from autoscale to manual throughput
    syntax:
      content: >-
        function migrateTableToManualThroughput(resourceGroupName: string,
        accountName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TableResourcesMigrateTableToManualThroughputResponse>
        description: Promise<Models.TableResourcesMigrateTableToManualThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.constructor'
    name: TableResources(CosmosDBManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a TableResources.
    syntax:
      content: 'new TableResources(client: CosmosDBManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.TableResources.updateTableThroughput'
    name: >-
      updateTableThroughput(string, string, string,
      ThroughputSettingsUpdateParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update RUs per second of an Azure Cosmos DB Table
    syntax:
      content: >-
        function updateTableThroughput(resourceGroupName: string, accountName:
        string, tableName: string, updateThroughputParameters:
        ThroughputSettingsUpdateParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters'
          description: |-
            The parameters to provide for the RUs per second of the
            current Table.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TableResourcesUpdateTableThroughputResponse>
        description: Promise<Models.TableResourcesUpdateTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
references:
  - uid: '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
    name: CosmosDBManagementClientContext
    spec.typeScript:
      - name: CosmosDBManagementClientContext
        fullName: CosmosDBManagementClientContext
        uid: '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
  - uid: '@azure/arm-cosmosdb.TableCreateUpdateParameters'
    name: TableCreateUpdateParameters
    spec.typeScript:
      - name: TableCreateUpdateParameters
        fullName: TableCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.TableCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters'
    name: ThroughputSettingsUpdateParameters
    spec.typeScript:
      - name: ThroughputSettingsUpdateParameters
        fullName: ThroughputSettingsUpdateParameters
        uid: '@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters'
  - uid: ServiceCallback<@azure/arm-cosmosdb.TableGetResults>
    name: TableGetResults>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TableGetResults
        fullName: TableGetResults
        uid: '@azure/arm-cosmosdb.TableGetResults'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.ThroughputSettingsGetResults>
    name: ThroughputSettingsGetResults>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ThroughputSettingsGetResults
        fullName: ThroughputSettingsGetResults
        uid: '@azure/arm-cosmosdb.ThroughputSettingsGetResults'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.TableListResult>
    name: TableListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TableListResult
        fullName: TableListResult
        uid: '@azure/arm-cosmosdb.TableListResult'
      - name: '>'
        fullName: '>'
