### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-cosmosdb.CassandraResources'
    name: CassandraResources
    fullName: CassandraResources
    children:
      - >-
        @azure/arm-cosmosdb.CassandraResources.beginCreateUpdateCassandraKeyspace
      - '@azure/arm-cosmosdb.CassandraResources.beginCreateUpdateCassandraTable'
      - '@azure/arm-cosmosdb.CassandraResources.beginDeleteCassandraKeyspace'
      - '@azure/arm-cosmosdb.CassandraResources.beginDeleteCassandraTable'
      - >-
        @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraKeyspaceToAutoscale
      - >-
        @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraKeyspaceToManualThroughput
      - >-
        @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraTableToAutoscale
      - >-
        @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraTableToManualThroughput
      - >-
        @azure/arm-cosmosdb.CassandraResources.beginUpdateCassandraKeyspaceThroughput
      - >-
        @azure/arm-cosmosdb.CassandraResources.beginUpdateCassandraTableThroughput
      - '@azure/arm-cosmosdb.CassandraResources.constructor'
      - '@azure/arm-cosmosdb.CassandraResources.createUpdateCassandraKeyspace'
      - '@azure/arm-cosmosdb.CassandraResources.createUpdateCassandraTable'
      - '@azure/arm-cosmosdb.CassandraResources.deleteCassandraKeyspace'
      - '@azure/arm-cosmosdb.CassandraResources.deleteCassandraTable'
      - '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspace'
      - '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspace_2'
      - '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspace_1'
      - '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspaceThroughput'
      - '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspaceThroughput_2'
      - '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspaceThroughput_1'
      - '@azure/arm-cosmosdb.CassandraResources.getCassandraTable'
      - '@azure/arm-cosmosdb.CassandraResources.getCassandraTable_2'
      - '@azure/arm-cosmosdb.CassandraResources.getCassandraTable_1'
      - '@azure/arm-cosmosdb.CassandraResources.getCassandraTableThroughput'
      - '@azure/arm-cosmosdb.CassandraResources.getCassandraTableThroughput_2'
      - '@azure/arm-cosmosdb.CassandraResources.getCassandraTableThroughput_1'
      - '@azure/arm-cosmosdb.CassandraResources.listCassandraKeyspaces'
      - '@azure/arm-cosmosdb.CassandraResources.listCassandraKeyspaces_2'
      - '@azure/arm-cosmosdb.CassandraResources.listCassandraKeyspaces_1'
      - '@azure/arm-cosmosdb.CassandraResources.listCassandraTables'
      - '@azure/arm-cosmosdb.CassandraResources.listCassandraTables_2'
      - '@azure/arm-cosmosdb.CassandraResources.listCassandraTables_1'
      - >-
        @azure/arm-cosmosdb.CassandraResources.migrateCassandraKeyspaceToAutoscale
      - >-
        @azure/arm-cosmosdb.CassandraResources.migrateCassandraKeyspaceToManualThroughput
      - '@azure/arm-cosmosdb.CassandraResources.migrateCassandraTableToAutoscale'
      - >-
        @azure/arm-cosmosdb.CassandraResources.migrateCassandraTableToManualThroughput
      - '@azure/arm-cosmosdb.CassandraResources.updateCassandraKeyspaceThroughput'
      - '@azure/arm-cosmosdb.CassandraResources.updateCassandraTableThroughput'
    langs:
      - typeScript
    type: class
    summary: Class representing a CassandraResources.
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.beginCreateUpdateCassandraKeyspace'
    name: >-
      beginCreateUpdateCassandraKeyspace(string, string, string,
      CassandraKeyspaceCreateUpdateParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update an Azure Cosmos DB Cassandra keyspace
    syntax:
      content: >-
        function beginCreateUpdateCassandraKeyspace(resourceGroupName: string,
        accountName: string, keyspaceName: string,
        createUpdateCassandraKeyspaceParameters:
        CassandraKeyspaceCreateUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: createUpdateCassandraKeyspaceParameters
          type:
            - '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
          description: |-
            The parameters to provide for the current
            Cassandra keyspace.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.beginCreateUpdateCassandraTable'
    name: >-
      beginCreateUpdateCassandraTable(string, string, string, string,
      CassandraTableCreateUpdateParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update an Azure Cosmos DB Cassandra Table
    syntax:
      content: >-
        function beginCreateUpdateCassandraTable(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string,
        createUpdateCassandraTableParameters:
        CassandraTableCreateUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: createUpdateCassandraTableParameters
          type:
            - '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
          description: |-
            The parameters to provide for the current Cassandra
            Table.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.beginDeleteCassandraKeyspace'
    name: >-
      beginDeleteCassandraKeyspace(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing Azure Cosmos DB Cassandra keyspace.
    syntax:
      content: >-
        function beginDeleteCassandraKeyspace(resourceGroupName: string,
        accountName: string, keyspaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.beginDeleteCassandraTable'
    name: >-
      beginDeleteCassandraTable(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing Azure Cosmos DB Cassandra table.
    syntax:
      content: >-
        function beginDeleteCassandraTable(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraKeyspaceToAutoscale
    name: >-
      beginMigrateCassandraKeyspaceToAutoscale(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Migrate an Azure Cosmos DB Cassandra Keyspace from manual throughput to
      autoscale
    syntax:
      content: >-
        function beginMigrateCassandraKeyspaceToAutoscale(resourceGroupName:
        string, accountName: string, keyspaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraKeyspaceToManualThroughput
    name: >-
      beginMigrateCassandraKeyspaceToManualThroughput(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Migrate an Azure Cosmos DB Cassandra Keyspace from autoscale to manual
      throughput
    syntax:
      content: >-
        function
        beginMigrateCassandraKeyspaceToManualThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraTableToAutoscale
    name: >-
      beginMigrateCassandraTableToAutoscale(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Migrate an Azure Cosmos DB Cassandra table from manual throughput to
      autoscale
    syntax:
      content: >-
        function beginMigrateCassandraTableToAutoscale(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraTableToManualThroughput
    name: >-
      beginMigrateCassandraTableToManualThroughput(string, string, string,
      string, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Migrate an Azure Cosmos DB Cassandra table from autoscale to manual
      throughput
    syntax:
      content: >-
        function beginMigrateCassandraTableToManualThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginUpdateCassandraKeyspaceThroughput
    name: >-
      beginUpdateCassandraKeyspaceThroughput(string, string, string,
      ThroughputSettingsUpdateParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update RUs per second of an Azure Cosmos DB Cassandra Keyspace
    syntax:
      content: >-
        function beginUpdateCassandraKeyspaceThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters'
          description: |-
            The RUs per second of the parameters to provide for the
            current Cassandra Keyspace.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.beginUpdateCassandraTableThroughput'
    name: >-
      beginUpdateCassandraTableThroughput(string, string, string, string,
      ThroughputSettingsUpdateParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update RUs per second of an Azure Cosmos DB Cassandra table
    syntax:
      content: >-
        function beginUpdateCassandraTableThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters'
          description: |-
            The RUs per second of the parameters to provide for the
            current Cassandra table.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.constructor'
    name: CassandraResources(CosmosDBManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a CassandraResources.
    syntax:
      content: 'new CassandraResources(client: CosmosDBManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.createUpdateCassandraKeyspace'
    name: >-
      createUpdateCassandraKeyspace(string, string, string,
      CassandraKeyspaceCreateUpdateParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update an Azure Cosmos DB Cassandra keyspace
    syntax:
      content: >-
        function createUpdateCassandraKeyspace(resourceGroupName: string,
        accountName: string, keyspaceName: string,
        createUpdateCassandraKeyspaceParameters:
        CassandraKeyspaceCreateUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: createUpdateCassandraKeyspaceParameters
          type:
            - '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
          description: |-
            The parameters to provide for the current
            Cassandra keyspace.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.CassandraResourcesCreateUpdateCassandraKeyspaceResponse>
        description: >-
          Promise<Models.CassandraResourcesCreateUpdateCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.createUpdateCassandraTable'
    name: >-
      createUpdateCassandraTable(string, string, string, string,
      CassandraTableCreateUpdateParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update an Azure Cosmos DB Cassandra Table
    syntax:
      content: >-
        function createUpdateCassandraTable(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string,
        createUpdateCassandraTableParameters:
        CassandraTableCreateUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: createUpdateCassandraTableParameters
          type:
            - '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
          description: |-
            The parameters to provide for the current Cassandra
            Table.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CassandraResourcesCreateUpdateCassandraTableResponse>
        description: Promise<Models.CassandraResourcesCreateUpdateCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.deleteCassandraKeyspace'
    name: 'deleteCassandraKeyspace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing Azure Cosmos DB Cassandra keyspace.
    syntax:
      content: >-
        function deleteCassandraKeyspace(resourceGroupName: string, accountName:
        string, keyspaceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.deleteCassandraTable'
    name: >-
      deleteCassandraTable(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing Azure Cosmos DB Cassandra table.
    syntax:
      content: >-
        function deleteCassandraTable(resourceGroupName: string, accountName:
        string, keyspaceName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspace'
    name: 'getCassandraKeyspace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Cassandra keyspaces under an existing Azure Cosmos DB database
      account with the

      provided name.
    syntax:
      content: >-
        function getCassandraKeyspace(resourceGroupName: string, accountName:
        string, keyspaceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CassandraResourcesGetCassandraKeyspaceResponse>
        description: Promise<Models.CassandraResourcesGetCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspace_2'
    name: >-
      getCassandraKeyspace(string, string, string, RequestOptionsBase,
      ServiceCallback<CassandraKeyspaceGetResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCassandraKeyspace(resourceGroupName: string, accountName:
        string, keyspaceName: string, options: RequestOptionsBase, callback:
        ServiceCallback<CassandraKeyspaceGetResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceGetResults>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspace_1'
    name: >-
      getCassandraKeyspace(string, string, string,
      ServiceCallback<CassandraKeyspaceGetResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCassandraKeyspace(resourceGroupName: string, accountName:
        string, keyspaceName: string, callback:
        ServiceCallback<CassandraKeyspaceGetResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceGetResults>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspaceThroughput'
    name: >-
      getCassandraKeyspaceThroughput(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the RUs per second of the Cassandra Keyspace under an existing Azure
      Cosmos DB database

      account with the provided name.
    syntax:
      content: >-
        function getCassandraKeyspaceThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.CassandraResourcesGetCassandraKeyspaceThroughputResponse>
        description: >-
          Promise<Models.CassandraResourcesGetCassandraKeyspaceThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspaceThroughput_2'
    name: >-
      getCassandraKeyspaceThroughput(string, string, string, RequestOptionsBase,
      ServiceCallback<ThroughputSettingsGetResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCassandraKeyspaceThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, options: RequestOptionsBase,
        callback: ServiceCallback<ThroughputSettingsGetResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.ThroughputSettingsGetResults>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspaceThroughput_1'
    name: >-
      getCassandraKeyspaceThroughput(string, string, string,
      ServiceCallback<ThroughputSettingsGetResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCassandraKeyspaceThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, callback:
        ServiceCallback<ThroughputSettingsGetResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.ThroughputSettingsGetResults>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraTable'
    name: >-
      getCassandraTable(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Cassandra table under an existing Azure Cosmos DB database
      account.
    syntax:
      content: >-
        function getCassandraTable(resourceGroupName: string, accountName:
        string, keyspaceName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CassandraResourcesGetCassandraTableResponse>
        description: Promise<Models.CassandraResourcesGetCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraTable_2'
    name: >-
      getCassandraTable(string, string, string, string, RequestOptionsBase,
      ServiceCallback<CassandraTableGetResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCassandraTable(resourceGroupName: string, accountName:
        string, keyspaceName: string, tableName: string, options:
        RequestOptionsBase, callback: ServiceCallback<CassandraTableGetResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTableGetResults>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraTable_1'
    name: >-
      getCassandraTable(string, string, string, string,
      ServiceCallback<CassandraTableGetResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCassandraTable(resourceGroupName: string, accountName:
        string, keyspaceName: string, tableName: string, callback:
        ServiceCallback<CassandraTableGetResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTableGetResults>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraTableThroughput'
    name: >-
      getCassandraTableThroughput(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the RUs per second of the Cassandra table under an existing Azure
      Cosmos DB database

      account with the provided name.
    syntax:
      content: >-
        function getCassandraTableThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.CassandraResourcesGetCassandraTableThroughputResponse>
        description: Promise<Models.CassandraResourcesGetCassandraTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraTableThroughput_2'
    name: >-
      getCassandraTableThroughput(string, string, string, string,
      RequestOptionsBase, ServiceCallback<ThroughputSettingsGetResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCassandraTableThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ThroughputSettingsGetResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.ThroughputSettingsGetResults>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraTableThroughput_1'
    name: >-
      getCassandraTableThroughput(string, string, string, string,
      ServiceCallback<ThroughputSettingsGetResults>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCassandraTableThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string, callback:
        ServiceCallback<ThroughputSettingsGetResults>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.ThroughputSettingsGetResults>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraKeyspaces'
    name: 'listCassandraKeyspaces(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists the Cassandra keyspaces under an existing Azure Cosmos DB database
      account.
    syntax:
      content: >-
        function listCassandraKeyspaces(resourceGroupName: string, accountName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CassandraResourcesListCassandraKeyspacesResponse>
        description: Promise<Models.CassandraResourcesListCassandraKeyspacesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraKeyspaces_2'
    name: >-
      listCassandraKeyspaces(string, string, RequestOptionsBase,
      ServiceCallback<CassandraKeyspaceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listCassandraKeyspaces(resourceGroupName: string, accountName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<CassandraKeyspaceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceListResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraKeyspaces_1'
    name: >-
      listCassandraKeyspaces(string, string,
      ServiceCallback<CassandraKeyspaceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listCassandraKeyspaces(resourceGroupName: string, accountName:
        string, callback: ServiceCallback<CassandraKeyspaceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceListResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraTables'
    name: 'listCassandraTables(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists the Cassandra table under an existing Azure Cosmos DB database
      account.
    syntax:
      content: >-
        function listCassandraTables(resourceGroupName: string, accountName:
        string, keyspaceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CassandraResourcesListCassandraTablesResponse>
        description: Promise<Models.CassandraResourcesListCassandraTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraTables_2'
    name: >-
      listCassandraTables(string, string, string, RequestOptionsBase,
      ServiceCallback<CassandraTableListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listCassandraTables(resourceGroupName: string, accountName:
        string, keyspaceName: string, options: RequestOptionsBase, callback:
        ServiceCallback<CassandraTableListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTableListResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraTables_1'
    name: >-
      listCassandraTables(string, string, string,
      ServiceCallback<CassandraTableListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listCassandraTables(resourceGroupName: string, accountName:
        string, keyspaceName: string, callback:
        ServiceCallback<CassandraTableListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTableListResult>
          description: |
            The callback
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.migrateCassandraKeyspaceToAutoscale'
    name: >-
      migrateCassandraKeyspaceToAutoscale(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Migrate an Azure Cosmos DB Cassandra Keyspace from manual throughput to
      autoscale
    syntax:
      content: >-
        function migrateCassandraKeyspaceToAutoscale(resourceGroupName: string,
        accountName: string, keyspaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.CassandraResourcesMigrateCassandraKeyspaceToAutoscaleResponse>
        description: >-
          Promise<Models.CassandraResourcesMigrateCassandraKeyspaceToAutoscaleResponse>
    package: '@azure/arm-cosmosdb'
  - uid: >-
      @azure/arm-cosmosdb.CassandraResources.migrateCassandraKeyspaceToManualThroughput
    name: >-
      migrateCassandraKeyspaceToManualThroughput(string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Migrate an Azure Cosmos DB Cassandra Keyspace from autoscale to manual
      throughput
    syntax:
      content: >-
        function migrateCassandraKeyspaceToManualThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.CassandraResourcesMigrateCassandraKeyspaceToManualThroughputResponse>
        description: >-
          Promise<Models.CassandraResourcesMigrateCassandraKeyspaceToManualThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.migrateCassandraTableToAutoscale'
    name: >-
      migrateCassandraTableToAutoscale(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Migrate an Azure Cosmos DB Cassandra table from manual throughput to
      autoscale
    syntax:
      content: >-
        function migrateCassandraTableToAutoscale(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.CassandraResourcesMigrateCassandraTableToAutoscaleResponse>
        description: >-
          Promise<Models.CassandraResourcesMigrateCassandraTableToAutoscaleResponse>
    package: '@azure/arm-cosmosdb'
  - uid: >-
      @azure/arm-cosmosdb.CassandraResources.migrateCassandraTableToManualThroughput
    name: >-
      migrateCassandraTableToManualThroughput(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Migrate an Azure Cosmos DB Cassandra table from autoscale to manual
      throughput
    syntax:
      content: >-
        function migrateCassandraTableToManualThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.CassandraResourcesMigrateCassandraTableToManualThroughputResponse>
        description: >-
          Promise<Models.CassandraResourcesMigrateCassandraTableToManualThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.updateCassandraKeyspaceThroughput'
    name: >-
      updateCassandraKeyspaceThroughput(string, string, string,
      ThroughputSettingsUpdateParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update RUs per second of an Azure Cosmos DB Cassandra Keyspace
    syntax:
      content: >-
        function updateCassandraKeyspaceThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, updateThroughputParameters:
        ThroughputSettingsUpdateParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters'
          description: |-
            The RUs per second of the parameters to provide for the
            current Cassandra Keyspace.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.CassandraResourcesUpdateCassandraKeyspaceThroughputResponse>
        description: >-
          Promise<Models.CassandraResourcesUpdateCassandraKeyspaceThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.CassandraResources.updateCassandraTableThroughput'
    name: >-
      updateCassandraTableThroughput(string, string, string, string,
      ThroughputSettingsUpdateParameters, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update RUs per second of an Azure Cosmos DB Cassandra table
    syntax:
      content: >-
        function updateCassandraTableThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type:
            - string
          description: Cosmos DB keyspace name.
        - id: tableName
          type:
            - string
          description: Cosmos DB table name.
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters'
          description: |-
            The RUs per second of the parameters to provide for the
            current Cassandra table.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.CassandraResourcesUpdateCassandraTableThroughputResponse>
        description: >-
          Promise<Models.CassandraResourcesUpdateCassandraTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
references:
  - uid: '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
    name: CosmosDBManagementClientContext
    spec.typeScript:
      - name: CosmosDBManagementClientContext
        fullName: CosmosDBManagementClientContext
        uid: '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
  - uid: '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
    name: CassandraKeyspaceCreateUpdateParameters
    spec.typeScript:
      - name: CassandraKeyspaceCreateUpdateParameters
        fullName: CassandraKeyspaceCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
    name: CassandraTableCreateUpdateParameters
    spec.typeScript:
      - name: CassandraTableCreateUpdateParameters
        fullName: CassandraTableCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters'
    name: ThroughputSettingsUpdateParameters
    spec.typeScript:
      - name: ThroughputSettingsUpdateParameters
        fullName: ThroughputSettingsUpdateParameters
        uid: '@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceGetResults>
    name: CassandraKeyspaceGetResults>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraKeyspaceGetResults
        fullName: CassandraKeyspaceGetResults
        uid: '@azure/arm-cosmosdb.CassandraKeyspaceGetResults'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.ThroughputSettingsGetResults>
    name: ThroughputSettingsGetResults>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ThroughputSettingsGetResults
        fullName: ThroughputSettingsGetResults
        uid: '@azure/arm-cosmosdb.ThroughputSettingsGetResults'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraTableGetResults>
    name: CassandraTableGetResults>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraTableGetResults
        fullName: CassandraTableGetResults
        uid: '@azure/arm-cosmosdb.CassandraTableGetResults'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceListResult>
    name: CassandraKeyspaceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraKeyspaceListResult
        fullName: CassandraKeyspaceListResult
        uid: '@azure/arm-cosmosdb.CassandraKeyspaceListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraTableListResult>
    name: CassandraTableListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraTableListResult
        fullName: CassandraTableListResult
        uid: '@azure/arm-cosmosdb.CassandraTableListResult'
      - name: '>'
        fullName: '>'
