### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults'
    name: DatabaseAccountGetResults
    fullName: DatabaseAccountGetResults
    children:
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.apiProperties'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.capabilities'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.connectorOffer'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.consistencyPolicy'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.cors'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.databaseAccountOfferType'
      - >-
        @azure/arm-cosmosdb.DatabaseAccountGetResults.disableKeyBasedMetadataWriteAccess
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.documentEndpoint'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.enableAnalyticalStorage'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.enableAutomaticFailover'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.enableCassandraConnector'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.enableFreeTier'
      - >-
        @azure/arm-cosmosdb.DatabaseAccountGetResults.enableMultipleWriteLocations
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.failoverPolicies'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.id'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.ipRules'
      - >-
        @azure/arm-cosmosdb.DatabaseAccountGetResults.isVirtualNetworkFilterEnabled
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.keyVaultKeyUri'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.kind'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.location'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.locations'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.name'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.privateEndpointConnections'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.provisioningState'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.publicNetworkAccess'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.readLocations'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.tags'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.type'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.virtualNetworkRules'
      - '@azure/arm-cosmosdb.DatabaseAccountGetResults.writeLocations'
    langs:
      - typeScript
    type: interface
    summary: An Azure Cosmos DB database account.
    extends:
      name: '@azure/arm-cosmosdb.ARMResourceProperties'
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.apiProperties'
    name: apiProperties
    fullName: apiProperties
    children: []
    langs:
      - typeScript
    type: property
    summary: API specific properties.
    optional: true
    syntax:
      content: 'apiProperties?: ApiProperties'
      return:
        type:
          - '@azure/arm-cosmosdb.ApiProperties'
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.capabilities'
    name: capabilities
    fullName: capabilities
    children: []
    langs:
      - typeScript
    type: property
    summary: List of Cosmos DB capabilities for the account
    optional: true
    syntax:
      content: 'capabilities?: Capability[]'
      return:
        type:
          - '@azure/arm-cosmosdb.Capability[]'
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.connectorOffer'
    name: connectorOffer
    fullName: connectorOffer
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The cassandra connector offer type for the Cosmos DB database C* account.
      Possible values

      include: 'Small'
    optional: true
    syntax:
      content: 'connectorOffer?: ConnectorOffer'
      return:
        type:
          - '@azure/arm-cosmosdb.ConnectorOffer'
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.consistencyPolicy'
    name: consistencyPolicy
    fullName: consistencyPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: The consistency policy for the Cosmos DB database account.
    optional: true
    syntax:
      content: 'consistencyPolicy?: ConsistencyPolicy'
      return:
        type:
          - '@azure/arm-cosmosdb.ConsistencyPolicy'
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.cors'
    name: cors
    fullName: cors
    children: []
    langs:
      - typeScript
    type: property
    summary: The CORS policy for the Cosmos DB database account.
    optional: true
    syntax:
      content: 'cors?: CorsPolicy[]'
      return:
        type:
          - '@azure/arm-cosmosdb.CorsPolicy[]'
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.databaseAccountOfferType'
    name: databaseAccountOfferType
    fullName: databaseAccountOfferType
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The offer type for the Cosmos DB database account. Default value:
      Standard. Possible values

      include: 'Standard'

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'databaseAccountOfferType?: DatabaseAccountOfferType'
      return:
        type:
          - '@azure/arm-cosmosdb.DatabaseAccountOfferType'
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: >-
      @azure/arm-cosmosdb.DatabaseAccountGetResults.disableKeyBasedMetadataWriteAccess
    name: disableKeyBasedMetadataWriteAccess
    fullName: disableKeyBasedMetadataWriteAccess
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Disable write operations on metadata resources (databases, containers,
      throughput) via account

      keys
    optional: true
    syntax:
      content: 'disableKeyBasedMetadataWriteAccess?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.documentEndpoint'
    name: documentEndpoint
    fullName: documentEndpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The connection endpoint for the Cosmos DB database account.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'documentEndpoint?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.enableAnalyticalStorage'
    name: enableAnalyticalStorage
    fullName: enableAnalyticalStorage
    children: []
    langs:
      - typeScript
    type: property
    summary: Flag to indicate whether to enable storage analytics.
    optional: true
    syntax:
      content: 'enableAnalyticalStorage?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.enableAutomaticFailover'
    name: enableAutomaticFailover
    fullName: enableAutomaticFailover
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Enables automatic failover of the write region in the rare event that the
      region is

      unavailable due to an outage. Automatic failover will result in a new
      write region for the

      account and is chosen based on the failover priorities configured for the
      account.
    optional: true
    syntax:
      content: 'enableAutomaticFailover?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.enableCassandraConnector'
    name: enableCassandraConnector
    fullName: enableCassandraConnector
    children: []
    langs:
      - typeScript
    type: property
    summary: Enables the cassandra connector on the Cosmos DB C* account
    optional: true
    syntax:
      content: 'enableCassandraConnector?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.enableFreeTier'
    name: enableFreeTier
    fullName: enableFreeTier
    children: []
    langs:
      - typeScript
    type: property
    summary: Flag to indicate whether Free Tier is enabled.
    optional: true
    syntax:
      content: 'enableFreeTier?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.enableMultipleWriteLocations'
    name: enableMultipleWriteLocations
    fullName: enableMultipleWriteLocations
    children: []
    langs:
      - typeScript
    type: property
    summary: Enables the account to write in multiple locations
    optional: true
    syntax:
      content: 'enableMultipleWriteLocations?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.failoverPolicies'
    name: failoverPolicies
    fullName: failoverPolicies
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An array that contains the regions ordered by their failover priorities.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'failoverPolicies?: FailoverPolicy[]'
      return:
        type:
          - '@azure/arm-cosmosdb.FailoverPolicy[]'
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The unique resource identifier of the ARM resource.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.ipRules'
    name: ipRules
    fullName: ipRules
    children: []
    langs:
      - typeScript
    type: property
    summary: List of IpRules.
    optional: true
    syntax:
      content: 'ipRules?: IpAddressOrRange[]'
      return:
        type:
          - '@azure/arm-cosmosdb.IpAddressOrRange[]'
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: >-
      @azure/arm-cosmosdb.DatabaseAccountGetResults.isVirtualNetworkFilterEnabled
    name: isVirtualNetworkFilterEnabled
    fullName: isVirtualNetworkFilterEnabled
    children: []
    langs:
      - typeScript
    type: property
    summary: Flag to indicate whether to enable/disable Virtual Network ACL rules.
    optional: true
    syntax:
      content: 'isVirtualNetworkFilterEnabled?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.keyVaultKeyUri'
    name: keyVaultKeyUri
    fullName: keyVaultKeyUri
    children: []
    langs:
      - typeScript
    type: property
    summary: The URI of the key vault
    optional: true
    syntax:
      content: 'keyVaultKeyUri?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.kind'
    name: kind
    fullName: kind
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicates the type of database account. This can only be set at database
      account creation.

      Possible values include: 'GlobalDocumentDB', 'MongoDB', 'Parse'. Default
      value:

      'GlobalDocumentDB'.
    optional: true
    syntax:
      content: 'kind?: DatabaseAccountKind'
      return:
        type:
          - '@azure/arm-cosmosdb.DatabaseAccountKind'
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.location'
    name: location
    fullName: location
    children: []
    langs:
      - typeScript
    type: property
    summary: The location of the resource group to which the resource belongs.
    optional: true
    syntax:
      content: 'location?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.locations'
    name: locations
    fullName: locations
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An array that contains all of the locations enabled for the Cosmos DB
      account.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'locations?: Location[]'
      return:
        type:
          - '@azure/arm-cosmosdb.Location[]'
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The name of the ARM resource.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'name?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.privateEndpointConnections'
    name: privateEndpointConnections
    fullName: privateEndpointConnections
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      List of Private Endpoint Connections configured for the Cosmos DB account.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'privateEndpointConnections?: PrivateEndpointConnection[]'
      return:
        type:
          - '@azure/arm-cosmosdb.PrivateEndpointConnection[]'
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.provisioningState'
    name: provisioningState
    fullName: provisioningState
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'provisioningState?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.publicNetworkAccess'
    name: publicNetworkAccess
    fullName: publicNetworkAccess
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Whether requests from Public Network are allowed. Possible values include:
      'Enabled',

      'Disabled'
    optional: true
    syntax:
      content: 'publicNetworkAccess?: PublicNetworkAccess'
      return:
        type:
          - '@azure/arm-cosmosdb.PublicNetworkAccess'
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.readLocations'
    name: readLocations
    fullName: readLocations
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An array that contains of the read locations enabled for the Cosmos DB
      account.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'readLocations?: Location[]'
      return:
        type:
          - '@azure/arm-cosmosdb.Location[]'
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.tags'
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'tags?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The type of Azure resource.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'type?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.virtualNetworkRules'
    name: virtualNetworkRules
    fullName: virtualNetworkRules
    children: []
    langs:
      - typeScript
    type: property
    summary: List of Virtual Network ACL rules configured for the Cosmos DB account.
    optional: true
    syntax:
      content: 'virtualNetworkRules?: VirtualNetworkRule[]'
      return:
        type:
          - '@azure/arm-cosmosdb.VirtualNetworkRule[]'
        description: ''
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountGetResults.writeLocations'
    name: writeLocations
    fullName: writeLocations
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An array that contains the write location for the Cosmos DB account.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'writeLocations?: Location[]'
      return:
        type:
          - '@azure/arm-cosmosdb.Location[]'
        description: ''
    package: '@azure/arm-cosmosdb'
references:
  - uid: '@azure/arm-cosmosdb.ARMResourceProperties'
    name: ARMResourceProperties
    spec.typeScript:
      - name: ARMResourceProperties
        fullName: ARMResourceProperties
        uid: '@azure/arm-cosmosdb.ARMResourceProperties'
  - uid: '@azure/arm-cosmosdb.ApiProperties'
    name: ApiProperties
    spec.typeScript:
      - name: ApiProperties
        fullName: ApiProperties
        uid: '@azure/arm-cosmosdb.ApiProperties'
  - uid: '@azure/arm-cosmosdb.Capability[]'
    name: 'Capability[]'
    spec.typeScript:
      - name: Capability
        fullName: Capability
        uid: '@azure/arm-cosmosdb.Capability'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-cosmosdb.ConnectorOffer'
    name: ConnectorOffer
    spec.typeScript:
      - name: ConnectorOffer
        fullName: ConnectorOffer
        uid: '@azure/arm-cosmosdb.ConnectorOffer'
  - uid: '@azure/arm-cosmosdb.ConsistencyPolicy'
    name: ConsistencyPolicy
    spec.typeScript:
      - name: ConsistencyPolicy
        fullName: ConsistencyPolicy
        uid: '@azure/arm-cosmosdb.ConsistencyPolicy'
  - uid: '@azure/arm-cosmosdb.CorsPolicy[]'
    name: 'CorsPolicy[]'
    spec.typeScript:
      - name: CorsPolicy
        fullName: CorsPolicy
        uid: '@azure/arm-cosmosdb.CorsPolicy'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountOfferType'
    name: DatabaseAccountOfferType
    spec.typeScript:
      - name: DatabaseAccountOfferType
        fullName: DatabaseAccountOfferType
        uid: '@azure/arm-cosmosdb.DatabaseAccountOfferType'
  - uid: '@azure/arm-cosmosdb.FailoverPolicy[]'
    name: 'FailoverPolicy[]'
    spec.typeScript:
      - name: FailoverPolicy
        fullName: FailoverPolicy
        uid: '@azure/arm-cosmosdb.FailoverPolicy'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-cosmosdb.IpAddressOrRange[]'
    name: 'IpAddressOrRange[]'
    spec.typeScript:
      - name: IpAddressOrRange
        fullName: IpAddressOrRange
        uid: '@azure/arm-cosmosdb.IpAddressOrRange'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountKind'
    name: DatabaseAccountKind
    spec.typeScript:
      - name: DatabaseAccountKind
        fullName: DatabaseAccountKind
        uid: '@azure/arm-cosmosdb.DatabaseAccountKind'
  - uid: '@azure/arm-cosmosdb.Location[]'
    name: 'Location[]'
    spec.typeScript:
      - name: Location
        fullName: Location
        uid: '@azure/arm-cosmosdb.Location'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-cosmosdb.PrivateEndpointConnection[]'
    name: 'PrivateEndpointConnection[]'
    spec.typeScript:
      - name: PrivateEndpointConnection
        fullName: PrivateEndpointConnection
        uid: '@azure/arm-cosmosdb.PrivateEndpointConnection'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-cosmosdb.PublicNetworkAccess'
    name: PublicNetworkAccess
    spec.typeScript:
      - name: PublicNetworkAccess
        fullName: PublicNetworkAccess
        uid: '@azure/arm-cosmosdb.PublicNetworkAccess'
  - uid: '@azure/arm-cosmosdb.VirtualNetworkRule[]'
    name: 'VirtualNetworkRule[]'
    spec.typeScript:
      - name: VirtualNetworkRule
        fullName: VirtualNetworkRule
        uid: '@azure/arm-cosmosdb.VirtualNetworkRule'
      - name: '[]'
        fullName: '[]'
