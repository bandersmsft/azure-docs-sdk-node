### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-reservations.AzureReservationAPI'
    name: AzureReservationAPI
    fullName: AzureReservationAPI
    children:
      - '@azure/arm-reservations.AzureReservationAPI.acceptLanguage'
      - '@azure/arm-reservations.AzureReservationAPI.autoQuotaIncrease'
      - '@azure/arm-reservations.AzureReservationAPI.constructor'
      - '@azure/arm-reservations.AzureReservationAPI.beginLongRunningRequest'
      - '@azure/arm-reservations.AzureReservationAPI.credentials'
      - '@azure/arm-reservations.AzureReservationAPI.getAppliedReservationList'
      - '@azure/arm-reservations.AzureReservationAPI.getAppliedReservationList_2'
      - '@azure/arm-reservations.AzureReservationAPI.getAppliedReservationList_1'
      - '@azure/arm-reservations.AzureReservationAPI.getCatalog_2'
      - '@azure/arm-reservations.AzureReservationAPI.getCatalog'
      - '@azure/arm-reservations.AzureReservationAPI.getCatalog_1'
      - >-
        @azure/arm-reservations.AzureReservationAPI.longRunningOperationRetryTimeout
      - '@azure/arm-reservations.AzureReservationAPI.operation'
      - '@azure/arm-reservations.AzureReservationAPI.quota'
      - '@azure/arm-reservations.AzureReservationAPI.quotaRequestStatus'
      - '@azure/arm-reservations.AzureReservationAPI.reservation'
      - '@azure/arm-reservations.AzureReservationAPI.reservationOrder'
      - '@azure/arm-reservations.AzureReservationAPI.restoreLROPoller'
      - '@azure/arm-reservations.AzureReservationAPI.sendLongRunningRequest'
      - '@azure/arm-reservations.AzureReservationAPI.sendLRORequest'
      - '@azure/arm-reservations.AzureReservationAPI.sendOperationRequest'
      - '@azure/arm-reservations.AzureReservationAPI.sendRequest'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-reservations.AzureReservationAPIContext'
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.autoQuotaIncrease'
    name: autoQuotaIncrease
    fullName: autoQuotaIncrease
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'autoQuotaIncrease: AutoQuotaIncrease'
      return:
        type:
          - '@azure/arm-reservations.AutoQuotaIncrease'
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.constructor'
    name: >-
      AzureReservationAPI(ServiceClientCredentials,
      Models.AzureReservationAPIOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the AzureReservationAPI class.
    syntax:
      content: >-
        new AzureReservationAPI(credentials: ServiceClientCredentials, options?:
        Models.AzureReservationAPIOptions)
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credentials needed for the client to connect to Azure.
        - id: options
          type:
            - Models.AzureReservationAPIOptions
          description: ''
          optional: true
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.beginLongRunningRequest'
    name: >-
      beginLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      HttpLongRunningOperationResponse that provides methods for polling the LRO
      and checking if the

      LRO is finished.
    syntax:
      content: >-
        function beginLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: |-
          The HttpLongRunningOperationResponse
          that provides methods for interacting with the LRO.
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.getAppliedReservationList'
    name: 'getAppliedReservationList(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get applicable `Reservation`s that are applied to this subscription or a
      resource group under

      this subscription.
    syntax:
      content: >-
        function getAppliedReservationList(subscriptionId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Id of the subscription
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAppliedReservationListResponse>
        description: Promise<Models.GetAppliedReservationListResponse>
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.getAppliedReservationList_2'
    name: >-
      getAppliedReservationList(string, RequestOptionsBase,
      ServiceCallback<AppliedReservations>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAppliedReservationList(subscriptionId: string, options:
        RequestOptionsBase, callback: ServiceCallback<AppliedReservations>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Id of the subscription
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-reservations.AppliedReservations>
          description: |
            The callback
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.getAppliedReservationList_1'
    name: 'getAppliedReservationList(string, ServiceCallback<AppliedReservations>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAppliedReservationList(subscriptionId: string, callback:
        ServiceCallback<AppliedReservations>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Id of the subscription
        - id: callback
          type:
            - ServiceCallback<@azure/arm-reservations.AppliedReservations>
          description: |
            The callback
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.getCatalog_2'
    name: >-
      getCatalog(string, string, AzureReservationAPIGetCatalogOptionalParams,
      ServiceCallback<Catalog[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCatalog(subscriptionId: string, reservedResourceType:
        string, options: AzureReservationAPIGetCatalogOptionalParams, callback:
        ServiceCallback<Catalog[]>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Id of the subscription
        - id: reservedResourceType
          type:
            - string
          description: The type of the resource for which the skus should be provided.
        - id: options
          type:
            - >-
              @azure/arm-reservations.AzureReservationAPIGetCatalogOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-reservations.Catalog[]>'
          description: |
            The callback
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.getCatalog'
    name: >-
      getCatalog(string, string,
      Models.AzureReservationAPIGetCatalogOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCatalog(subscriptionId: string, reservedResourceType:
        string, options?: Models.AzureReservationAPIGetCatalogOptionalParams)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Id of the subscription
        - id: reservedResourceType
          type:
            - string
          description: The type of the resource for which the skus should be provided.
        - id: options
          type:
            - Models.AzureReservationAPIGetCatalogOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetCatalogResponse>
        description: Promise<Models.GetCatalogResponse>
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.getCatalog_1'
    name: 'getCatalog(string, string, ServiceCallback<Catalog[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCatalog(subscriptionId: string, reservedResourceType:
        string, callback: ServiceCallback<Catalog[]>)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Id of the subscription
        - id: reservedResourceType
          type:
            - string
          description: The type of the resource for which the skus should be provided.
        - id: callback
          type:
            - 'ServiceCallback<@azure/arm-reservations.Catalog[]>'
          description: |
            The callback
    package: '@azure/arm-reservations'
  - uid: >-
      @azure/arm-reservations.AzureReservationAPI.longRunningOperationRetryTimeout
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The retry timeout in seconds for Long Running Operations. Default value is
      30.
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.operation'
    name: operation
    fullName: operation
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operation: Operation'
      return:
        type:
          - '@azure/arm-reservations.Operation'
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.quota'
    name: quota
    fullName: quota
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'quota: Quota'
      return:
        type:
          - '@azure/arm-reservations.Quota'
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.quotaRequestStatus'
    name: quotaRequestStatus
    fullName: quotaRequestStatus
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'quotaRequestStatus: QuotaRequestStatus'
      return:
        type:
          - '@azure/arm-reservations.QuotaRequestStatus'
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.reservation'
    name: reservation
    fullName: reservation
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'reservation: Reservation'
      return:
        type:
          - '@azure/arm-reservations.Reservation'
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.reservationOrder'
    name: reservationOrder
    fullName: reservationOrder
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'reservationOrder: ReservationOrder'
      return:
        type:
          - '@azure/arm-reservations.ReservationOrder'
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Restore an LROPoller from the provided LROPollState. This method can be
      used to recreate an

      LROPoller on a different process or machine.
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.sendLongRunningRequest'
    name: >-
      sendLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Provides a mechanism to make a request that will poll and provide the
      final result.
    syntax:
      content: >-
        function sendLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
        description: >-
          The HttpOperationResponse containing the final polling request,
          response and the responseBody.
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      LROPoller that provides methods for polling the LRO and checking if the
      LRO is finished.
    syntax:
      content: >-
        function sendLRORequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, options?: RequestOptionsBase)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: The arguments to the operation.
        - id: operationSpec
          type:
            - OperationSpec
          description: The specification for the operation.
        - id: options
          type:
            - RequestOptionsBase
          description: Additional options to be sent while making the request.
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: >-
          The LROPoller object that provides methods for interacting with the
          LRO.
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.sendOperationRequest'
    name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type:
            - OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback to call when the response is received.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/arm-reservations'
  - uid: '@azure/arm-reservations.AzureReservationAPI.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResourceLike)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the provided httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResourceLike)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
        description: ''
    package: '@azure/arm-reservations'
references:
  - uid: '@azure/arm-reservations.AzureReservationAPIContext'
    name: AzureReservationAPIContext
    spec.typeScript:
      - name: AzureReservationAPIContext
        fullName: AzureReservationAPIContext
        uid: '@azure/arm-reservations.AzureReservationAPIContext'
  - uid: '@azure/arm-reservations.AutoQuotaIncrease'
    name: AutoQuotaIncrease
    spec.typeScript:
      - name: AutoQuotaIncrease
        fullName: AutoQuotaIncrease
        uid: '@azure/arm-reservations.AutoQuotaIncrease'
  - uid: '@azure/arm-reservations.Operation'
    name: Operation
    spec.typeScript:
      - name: Operation
        fullName: Operation
        uid: '@azure/arm-reservations.Operation'
  - uid: '@azure/arm-reservations.Quota'
    name: Quota
    spec.typeScript:
      - name: Quota
        fullName: Quota
        uid: '@azure/arm-reservations.Quota'
  - uid: '@azure/arm-reservations.QuotaRequestStatus'
    name: QuotaRequestStatus
    spec.typeScript:
      - name: QuotaRequestStatus
        fullName: QuotaRequestStatus
        uid: '@azure/arm-reservations.QuotaRequestStatus'
  - uid: '@azure/arm-reservations.Reservation'
    name: Reservation
    spec.typeScript:
      - name: Reservation
        fullName: Reservation
        uid: '@azure/arm-reservations.Reservation'
  - uid: '@azure/arm-reservations.ReservationOrder'
    name: ReservationOrder
    spec.typeScript:
      - name: ReservationOrder
        fullName: ReservationOrder
        uid: '@azure/arm-reservations.ReservationOrder'
  - uid: ServiceCallback<@azure/arm-reservations.AppliedReservations>
    name: AppliedReservations>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AppliedReservations
        fullName: AppliedReservations
        uid: '@azure/arm-reservations.AppliedReservations'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/arm-reservations.Catalog[]>'
    name: 'Catalog[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Catalog
        fullName: Catalog
        uid: '@azure/arm-reservations.Catalog'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/arm-reservations.AzureReservationAPIGetCatalogOptionalParams'
    name: AzureReservationAPIGetCatalogOptionalParams
    spec.typeScript:
      - name: AzureReservationAPIGetCatalogOptionalParams
        fullName: AzureReservationAPIGetCatalogOptionalParams
        uid: '@azure/arm-reservations.AzureReservationAPIGetCatalogOptionalParams'
